import logging
import time

import tweepy
from spotifyConnect import show_recommendations_for_artist
from spotifyConnect import get_artist

from twitterconfig import create_api

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger()

uiui = create_api()
name = 'BlakkStar'
artist = get_artist(name)
if artist:
    show_recommendations_for_artist(artist)
else:
    print("Can't find that artist", name)

def check_mentions(api, keywords, since_id):
    logger.info("Retrieving mentions")
    new_since_id = since_id
    for tweet in tweepy.Cursor(api.mentions_timeline,
                               since_id=since_id).items():
        new_since_id = max(tweet.id, new_since_id)
        if tweet.in_reply_to_status_id is not None:
            continue
        if any(keyword in tweet.text.lower() for keyword in keywords):
            username_to_reply = tweet.user.screen_name

            logger.info(f"Respondendo para {tweet.user.name}")
            reply_status = "@%s %s" % (username_to_reply,)
            uiui.update_status(
                status=reply_status,
                in_reply_to_status_id=tweet.id,
            )
        print(new_since_id)
    return new_since_id


def main():
    since_id = 1
    while True:
        print(since_id)
        since_id = check_mentions(uiui, ["music", "movie", "quote"], since_id)
        logger.info("Aguardando...")
        time.sleep(20)

if __name__ == "__main__":
    main()